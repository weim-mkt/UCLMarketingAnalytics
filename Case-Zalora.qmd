---
title: "Zalora: Data-Driven Pricing Recommendations"
author: Dr Wei Miao
subtitle: "MSIN0094 Case Study"
institute: UCL School of Management
date: "`r (lubridate::ymd('20221006')+lubridate::dweeks(3))|> format('%a, %d %b')`"
colorlinks: true
code-line-numbers: true
format:
  html: 
    toc: true
    number-sections: true
    page-layout: full
    toc-depth: 2
    code-line-numbers: true
    code-copy: hover
knitr:
  opts_chunk:
    echo: true
    warning: false
    message: false
    error: false
execute: 
  cache: false
bibliography: references.bib
editor_options: 
  chunk_output_type: inline
---

# Linear Regression Basics

## Univariate regression

-   Load the Tesco dataset and necessary packages

```{r}
pacman::p_load(dplyr)
# Load both datasets
data_purchase <- read.csv(file = "https://www.dropbox.com/s/126e9vkq80y9ti9/purchase.csv?dl=1", 
                      header = T)

data_demo <- read.csv("https://www.dropbox.com/s/hbrgktcz98y0igs/demographics.csv?dl=1",
                      header = T)

# Left join demographic data into purchase data
data_full <- data_purchase %>%
  left_join(data_demo, by = "ID")

# Handle Missing Values of Income
data_full <- data_full %>%
  mutate(Income = replace(Income, is.na(Income), mean(Income,na.rm =T))) %>%
  mutate(total_spending = MntFishProducts + MntFruits + MntGoldProds + MntMeatProducts + MntSweetProducts + MntWines)
```

-   Run a linear regression by regressing `total_spending` on `Income`

```{r}
pacman::p_load(modelsummary,fixest)

OLS_result <- feols( 
   fml = total_spending ~ Income, # Y ~ X
   data = data_full, # dataset from Tesco
   ) 
```

-   Generate the regression result table using `modelsummary()` from the `modelsummary` package.

```{r}
modelsummary(OLS_result,
    stars = TRUE,  # export statistical significance
  )
```

## Multivariate regression

-   Run a linear regression by regressing `total_spending` on `Income` and `Kidhome`

```{r}
feols(data = data_full,
     fml = total_spending ~ Income + Kidhome) %>%
  modelsummary(stars = T)
```

# Linear Regression Advanced

## Factor variables

-   Generate a factor variable for `Education`

```{r}
data_full <- data_full %>%
  mutate(Education_factor = factor(Education))

# check levels of a factor
levels(data_full$Education_factor)
```

-   Change the baseline group to "Basic"

```{r}

data_full <- data_full %>%
  mutate(Education_factor_2 = relevel(Education_factor, 
                                      ref = "Basic") )

levels(data_full$Education_factor_2)
```

-   Run a regression with factor variable `Education_factor_2`

```{r}
feols_categorical <- feols(data = data_full,
  total_spending ~ Income + Kidhome + Education_factor_2)

# report the result
modelsummary(feols_categorical,
             stars = T)
```

## Non-linear Effects

-   Generate a quadratic term of `Income`

```{r}
data_full <- data_full %>%
  mutate(Income_quadartic = Income^2 )


```

-   Run 2 models with and without the quadratic term

```{r}
# model 1: without quadratic term
feols_noquadratic <- feols(data = data_full,
  fml =  total_spending ~ Income )

# model 2: with quadratic term
feols_quadratic <- feols(data = data_full,
  fml =  total_spending ~ Income  + Income_quadartic )
```

-   Report the results from the two regressions

```{r}
modelsummary(list(feols_noquadratic,feols_quadratic),
             stars = T)
```

# Zalora Data-Driven Pricing

## Data Wrangling

### Load data

```{r}
data_zalora <- read.csv('https://www.dropbox.com/s/ok2b7pcudo9c5m5/519701-XLS-ENG.csv?dl=1')
```

### Examine the data types

```{r}
str(data_zalora)
```

### Summary Statistics

```{r}
datasummary_skim(data_zalora)
```

### Variable Operationalization

When building marketing mix modeling, we need to transform categorical variables into factor variables in R. Think about the following variables:

-   `Week_of_Year` should be treated as a categorical variable, because seasonality should not be linear in time.

```{r}
#  Change Week_of_Year into a factor
data_zalora <- data_zalora %>%
  mutate(Week_of_Year = factor(Week_of_Year))

```

-   `Brand_Name` and `Price_Band` should also be converted into factor variables.

```{r}
# complete the code below
data_zalora <- data_zalora %>%
  mutate(Brand_Name = factor(Brand_Name),
         Price_Band = factor(Price_Band))
```

## Regression Analysis

![](images/zalora_equation.png)

-   Run the above multivariate regression in R, where the dependent variable is `Units_Sold` and the explanatory variables are `Unit_Price` and the others.

```{r}
# If we do not care about the estimates of fixed effects

result_ols2 <- feols(
  fml =  Units_Sold ~ Unit_Price + Weeks_Since_Release +
    Price_Band + Brand_Name + Week_of_Year,
  data = data_zalora
)

modelsummary(result_ols2,
             stars = TRUE)

```

-   **Exercise**: How would you interpret the coefficients in this regression table?

## Pricing Optimization

### If we use the same price level

-   Load the data for the focal product, SKU #0D159AAFC1DF38GS.

```{r}
data_SKU <- read.csv('https://www.dropbox.com/s/hdl3gw6utjirvf4/data_sku.csv?dl=1')

data_SKU <- data_SKU %>%
  mutate(Week_of_Year = factor(Week_of_Year, 
                               levels = levels(data_zalora$Week_of_Year)),
         Brand_Name = factor(Brand_Name, 
                               levels = levels(data_zalora$Brand_Name)),
         Price_Band = factor(Price_Band, 
                               levels = levels(data_zalora$Price_Band)))
```

-   If keep the same pricing from week 3, \$34.9, for the remaining weeks, predict the weekly sales.

```{r}
pacman::p_load(dplyr)
data_SKU_afterweek3 <- data_SKU %>%
  filter(Weeks_Since_Release > 3) %>% # only keep data after week 3
  mutate(Unit_Price = 34.9)  # fill in unit price as 34.9

# predict the weekly sales from Marketing Mix Modeling
predicted_weekly_sales <- round(predict(result_ols2,data_SKU_afterweek3),0)
predicted_weekly_sales

# fill in the predicted sales
data_SKU_afterweek3 <- data_SKU_afterweek3%>% 
  mutate(predicted_sales = predicted_weekly_sales)%>%
  mutate(Stock = pmax(39 +predicted_weekly_sales[1] - (cumsum(predicted_sales)),0) )%>%
  mutate(Profit = pmin(predicted_sales,Stock) * (Unit_Price - Item_Cost) )
```

```{r}
data_SKU_afterweek3 %>%
  select(Weeks_Since_Release, Unit_Price, predicted_sales, Stock, Profit)
```

```{r}
# compute the total profits
sum(data_SKU_afterweek3$Profit)
```

-   From the above analyses, it seems if Zalora keeps using \$34.9, by the end of week 7, all products will be sold out. And the total profits will be 800 dollars.

### Profit Optimization[^1]

[^1]: You will learn how to use optimization solver in term 2 Operations Analytics.

-   Write a user-defined function to compute the revenue each week conditional on a new value of price

```{r}

# define a function, given the price input, return the revenue
compute_revenue <- function(price, week_of_year) {
  data_SKU_week <- data_SKU%>%
    filter(Week_of_Year == as.character(week_of_year) ) %>%
    mutate(Unit_Price = price)
  
  # predict the sales
  sales <- round(predict(result_ols2,
                   data_SKU_week),0)
  
  # compute revenue
  revenue <- sales * price
  
  # compute profits
  profit <- sales * (price - 15.39)
  
  return(list(revenue, # return all results as a R list
              profit,
              sales))
}
```

-   Use optimization solver to find the best price, that can maximize profit for each individual week

```{r}

for (i_iter in c(1:nrow(data_SKU_afterweek3))){
  data_SKU_afterweek3$Unit_Price[i_iter] <- optimize(
    f =  \(x) {-1 * compute_revenue(x,data_SKU_afterweek3$Week_of_Year[i_iter])[[2]]},
         c(0,100))$minimum
  
  print(data_SKU_afterweek3$Unit_Price[i_iter])
}
```

-   Compute the sales and profit from the prices that maximize profit for each individual week

```{r}
# predict the weekly sales from Marketing Mix Modeling
predicted_weekly_sales <- round(predict(result_ols2,data_SKU_afterweek3),0)

# fill in the predicted sales
data_SKU_afterweek3 <- data_SKU_afterweek3%>% 
  mutate(predicted_sales = predicted_weekly_sales)%>%
  mutate(Stock = pmax(39 +predicted_weekly_sales[1] - (cumsum(predicted_sales)),0) ) %>% # calculate the remaining stock from last week
  
  mutate(Profit = pmin(predicted_sales,Stock) * (Unit_Price - Item_Cost) )
```

```{r}
# print out the dataset
data_SKU_afterweek3 %>%
  select(Weeks_Since_Release, Unit_Price, predicted_sales, Stock, Profit)
```

```{r}
# compute the total profits from data-driven pricing
sum(data_SKU_afterweek3$Profit)
```

-   From the above analyses, it seems if Zalora uses profit maximization pricing, by the end of week 7, all products will be sold out. And the total profits will be 911 dollars.

We observe a huge boost in profits after we use marketing mix models and data-driven pricing analytics!
